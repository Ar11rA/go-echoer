definitions:
  types.EchoRequest:
    properties:
      text:
        type: string
    type: object
  types.EchoResponse:
    properties:
      args:
        additionalProperties: true
        type: object
      data:
        additionalProperties: true
        type: object
      headers:
        additionalProperties:
          type: string
        type: object
      url:
        type: string
    type: object
  types.MessagePublishRequest:
    properties:
      content:
        type: string
    required:
    - content
    type: object
  types.QuoteResponse:
    properties:
      _id:
        type: string
      author:
        type: string
      authorSlug:
        type: string
      content:
        type: string
      dateAdded:
        type: string
      dateModified:
        type: string
      length:
        type: integer
      tags:
        items:
          type: string
        type: array
    type: object
  types.RedisDataRequest:
    properties:
      key:
        type: string
      value:
        type: string
    required:
    - key
    - value
    type: object
  types.UserModel:
    properties:
      email:
        description: Add fields according to your schema
        type: string
      id:
        description: Assuming ID is auto-incremented
        type: integer
      username:
        description: Add fields according to your schema
        type: string
    type: object
  types.UserRequest:
    properties:
      email:
        type: string
      name:
        type: string
    type: object
info:
  contact: {}
paths:
  /echo:
    get:
      description: Fetches data from Postman Echo based on a query parameter
      parameters:
      - description: Query parameter
        in: query
        name: query
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/types.EchoResponse'
        "400":
          description: Bad request - query parameter is required
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: HTTP Handler
    post:
      consumes:
      - application/json
      description: Echoes the posted body back from Postman Echo
      parameters:
      - description: Post Request Body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.EchoRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/types.EchoResponse'
        "400":
          description: Bad request - invalid request body
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: POST Handler
  /env:
    get:
      description: Check the env vars of the server
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Sample env value Check
  /health:
    get:
      description: Check the health of the server
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Health Check
  /publish:
    post:
      consumes:
      - application/json
      description: Publishes a message to a RabbitMQ queue
      parameters:
      - description: MessagePublishRequest object
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/types.MessagePublishRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Message published successfully
          schema:
            type: string
        "400":
          description: Bad request - Content is required
          schema:
            type: string
        "500":
          description: Failed to publish message
          schema:
            type: string
      summary: Publish Message to RabbitMQ
  /quotes:
    get:
      description: Fetches multiple quotes from Postman Echo API based on the limit
        parameter
      parameters:
      - description: Number of quotes to fetch
        in: query
        name: limit
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of quotes
          schema:
            items:
              $ref: '#/definitions/types.QuoteResponse'
            type: array
        "400":
          description: Bad request - limit parameter is required or invalid
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: HTTP Handler for Fetching Multiple Quotes
  /redis/{key}:
    get:
      description: Retrieve a value from Redis using the provided key
      parameters:
      - description: Key to retrieve value
        in: path
        name: key
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Value retrieved successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error - failed to retrieve data
          schema:
            type: string
      summary: Get Data from Redis
  /redis/save:
    post:
      consumes:
      - application/json
      description: Save a key-value pair to Redis using POST
      parameters:
      - description: Key-value pair to save
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.RedisDataRequest'
      produces:
      - text/plain
      responses:
        "200":
          description: Data saved successfully
          schema:
            type: string
        "400":
          description: Bad request - invalid input
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Save Data to Redis
  /save:
    get:
      description: Saves content to a file based on the provided query parameter
      parameters:
      - description: Content to save
        in: query
        name: content
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: Content saved successfully
          schema:
            type: string
        "400":
          description: Bad request - content is required
          schema:
            type: string
        "500":
          description: Internal server error - failed to save content
          schema:
            type: string
      summary: File Handler
  /users:
    post:
      description: Creates a new user with the provided username and email
      parameters:
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/types.UserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User created successfully
          schema:
            additionalProperties:
              type: boolean
            type: object
        "400":
          description: Bad request - username and email are required
          schema:
            type: string
        "500":
          description: Internal server error - failed to create user
          schema:
            type: string
      summary: Create User
  /users/{id}:
    get:
      description: Retrieves user information by user ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User found
          schema:
            $ref: '#/definitions/types.UserModel'
        "404":
          description: User not found
          schema:
            type: string
        "500":
          description: Internal server error - failed to retrieve user
          schema:
            type: string
      summary: Get User by ID
swagger: "2.0"
